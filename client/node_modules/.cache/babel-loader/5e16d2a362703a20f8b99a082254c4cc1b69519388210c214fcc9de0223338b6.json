{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    users: []\n  },\n  reducers: {\n    getUser: (state, action) => {\n      state.users = action.payload.map(user => {\n        return {\n          id: user._id,\n          name: user.name,\n          email: user.email,\n          age: user.age\n        };\n      });\n    },\n    addUser: (state, action) => {\n      state.users.push(action.payload);\n    },\n    updateUser: (state, action) => {\n      const index = state.users.findIndex(x => x.id === action.payload.id);\n      state.users[index] = {\n        id: action.payload.id,\n        name: action.payload.name,\n        email: action.payload.email,\n        age: action.payload.age\n      };\n    },\n    deleteUser: (state, action) => {\n      const id = action.payload.id;\n      state.users = state.users.filter(u => u.id);\n    }\n  }\n});\nexport const {\n  getUser,\n  addUser,\n  updateUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","users","reducers","getUser","state","action","payload","map","user","id","_id","email","age","addUser","push","updateUser","index","findIndex","x","deleteUser","filter","u","actions","reducer"],"sources":["E:/reactjs/React-Redux/react-redux-mern-crud/client/src/redux/userSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n    name: 'users',\r\n    initialState: {\r\n        users: []\r\n    },\r\n    reducers: {\r\n        getUser: (state, action) => {\r\n            state.users = action.payload.map(user => {\r\n                return { id: user._id, name: user.name, email: user.email, age: user.age }\r\n            })\r\n        },\r\n        addUser: (state, action) => {\r\n            state.users.push(action.payload)\r\n        },\r\n        updateUser: (state, action) => {\r\n            const index = state.users.findIndex(x => x.id === action.payload.id)\r\n            state.users[index] = {\r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                email: action.payload.email,\r\n                age: action.payload.age,\r\n            }\r\n        },\r\n        deleteUser: (state, action) => {\r\n            const id = action.payload.id;\r\n            state.users=state.users.filter(u=>u.id)\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const { getUser, addUser, updateUser } = userSlice.actions;\r\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI;QACrC,OAAO;UAAEC,EAAE,EAAED,IAAI,CAACE,GAAG;UAAEX,IAAI,EAAES,IAAI,CAACT,IAAI;UAAEY,KAAK,EAAEH,IAAI,CAACG,KAAK;UAAEC,GAAG,EAAEJ,IAAI,CAACI;QAAI,CAAC;MAC9E,CAAC,CAAC;IACN,CAAC;IACDC,OAAO,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACH,KAAK,CAACa,IAAI,CAACT,MAAM,CAACC,OAAO,CAAC;IACpC,CAAC;IACDS,UAAU,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMW,KAAK,GAAGZ,KAAK,CAACH,KAAK,CAACgB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKJ,MAAM,CAACC,OAAO,CAACG,EAAE,CAAC;MACpEL,KAAK,CAACH,KAAK,CAACe,KAAK,CAAC,GAAG;QACjBP,EAAE,EAAEJ,MAAM,CAACC,OAAO,CAACG,EAAE;QACrBV,IAAI,EAAEM,MAAM,CAACC,OAAO,CAACP,IAAI;QACzBY,KAAK,EAAEN,MAAM,CAACC,OAAO,CAACK,KAAK;QAC3BC,GAAG,EAAEP,MAAM,CAACC,OAAO,CAACM;MACxB,CAAC;IACL,CAAC;IACDO,UAAU,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMI,EAAE,GAAGJ,MAAM,CAACC,OAAO,CAACG,EAAE;MAC5BL,KAAK,CAACH,KAAK,GAACG,KAAK,CAACH,KAAK,CAACmB,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACZ,EAAE,CAAC;IAC3C;EACJ;AAEJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,OAAO;EAAEU,OAAO;EAAEE;AAAW,CAAC,GAAGjB,SAAS,CAACwB,OAAO;AACjE,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}